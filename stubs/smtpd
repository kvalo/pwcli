#!/usr/bin/env python3
#
# Copyright (c) 2015, The Linux Foundation.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are
# met:
#
# 1. Redistributions of source code must retain the above copyright
# notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
# notice, this list of conditions and the following disclaimer in the
# documentation and/or other materials provided with the distribution.
#
# 3. Neither the name of the copyright holder nor the names of its
# contributors may be used to endorse or promote products derived from
# this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
# HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

import argparse
import aiosmtpd.controller
import os
import os.path
import sys
import signal

datadir = None


class CustomHandler:
    async def handle_DATA(self, server, session, envelope):
        rcpt_tos = ', '.join(envelope.rcpt_tos)

        print('smtpd: %s -> %s' % (envelope.mail_from, rcpt_tos))

        if os.path.isdir(datadir):
            f = open(os.path.join(datadir, str(self.count)), 'w')
            f.write('%s -> %s\n' % (envelope.mail_from, rcpt_tos))

            # FIXME: is .decode('utf-8') really necessary here or is this is just a leftover python2 hack?
            buf = envelope.content.decode('utf-8')

            # to maintain compability with the previous smtpd package
            # implementation and avoid changes in cmdtest output
            buf = buf[:-2]

            f.write(buf)

            f.close
            self.count += 1

        return '250 OK'

    def __init__(self):
        self.count = 0


def run(args):
    if os.path.isdir(datadir):
        files = len(os.listdir(datadir))
        if files > 0:
            print('%s directory is not empty: %d' % (datadir, files))
            sys.exit(1)

    handler = CustomHandler()
    controller = aiosmtpd.controller.Controller(handler, hostname='127.0.0.1', port=args.port)

    # Run the event loop in a separate thread.
    controller.start()

    # wait until a signal is received
    signal.pause()

    controller.stop()


def main():
    global datadir

    if 'STUB_SMTPD_DATADIR' in os.environ:
        datadir = os.environ['STUB_SMTPD_DATADIR']
    else:
        datadir = '.'

    parser = argparse.ArgumentParser(description='smtpd-stub')

    parser.add_argument('--port', action='store', type=int, default=5872)

    args = parser.parse_args()

    run(args)


if __name__ == "__main__":
    main()
